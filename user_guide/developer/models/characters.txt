get_character_info($id = '')

Retrieves all information about a character

$id			=> any numerical ID that matches an ID from the characters table

==========

get_player_id($character = '')

Retrives the player ID based on a character ID being passed to the method

$character	=> any numerical ID that matches an ID from the characters table

==========

get_player_characters($player = '', $char_type = 'active')

Retrives all characters a player has based on their status

$player		=> any numerical ID that matches an ID from the players table
$char_type	=> active, inactive, npc, pending

==========

get_character_awards($character = 0, $player = '', $limit = 0)

Retrieves all of a character's awards

$character	=> any numerical ID that matches an ID from the characters table
$player		=> any numerical ID that matches an ID from the players table
$limit		=> the number of items to return

==========

get_character_name($character = '', $rank = FALSE)

Retrieves that character name, taking in to account whether all the names are present or not. The optional second parameter will set whether their rank is displayed or not.

$character	=> any numerical ID that matches an ID from the characters table
$rank		=> TRUE, FALSE

==========

get_authors($character = '', $rank = TRUE)

Takes a string of comma separated IDs and returns a string of names (used mainly for display post authors). The optional second parameter will set whether their rank is displayed or not.

$character	=> a comma separated string of numerical IDs that match IDs from the characters table
$rank		=> TRUE, FALSE

==========

get_coc()

Returns an object with the chain of command data

==========

get_bio_sections()

Returns the bio sections (if there are any)

==========

get_bio_fields($section = '')

Returns the bio fields for the current section

$section	=> any numerical ID that matches an ID from the characters_sections table

==========

get_bio_values($field = '')

Returns the values for a bio field if it's a select menu

$field		=> any numerical ID that matches an ID from the characters_fields table

==========

get_field_data($field = '', $character = '')

Returns the field data for a given field for a given character

$field		=> any numerical ID that matches an ID from the characters_fields table
$character	=> any numerical ID that matches an ID from the characters table

==========

get_bio_tabs()

Returns the tabs used on the bio pages (if there are any)

==========

get_characters_for_position($position = '')

Returns all characters for a given position. Does not include pending characters. Searches both first and second positions.

$position	=> any numerical ID that matches an ID from the positions table

==========

count_characters($type = 'active', $timeframe = 'current', $this_month = '', $last_month = '')

Returns a count of all characters that match the criteria fed to the method. The second parameter determines whether the method should be looking for this month and the previous month.

$type		=> active, inactive, npc, pending
$timeframe	=> current, previous
$this_month	=> a UNIX timestamp of the start of the current month
$last_month	=> a UNIX timestamp of the start of the previous month

==========

create_coc_entry($data = '')

Creates a COC entry with the data fed to the method. Returns the number of affected rows.

$data		=> an array of data to be inserted into the table

==========

create_character($data = '')

Creates a character entry with the data fed to the method. Returns the number of affected rows.

$data		=> an array of data to be inserted into the table

==========

insert_character_data($data = '')

Inserts character data into the dynamic table with the data fed to the method. Returns the number of affected rows.

$data		=> an array of data to be inserted into the table
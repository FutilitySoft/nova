<?php if (!defined('BASEPATH')) exit('No direct script access allowed');
/**
 * CodeIgniter
 *
 * An open source application development framework for PHP 4.3.2 or newer
 *
 * @package		CodeIgniter
 * @author		ExpressionEngine Dev Team
 * @copyright	Copyright (c) 2006, EllisLab, Inc.
 * @license		http://codeigniter.com/user_guide/license.html
 * @link		http://codeigniter.com
 * @since		Version 1.0
 * @filesource
 */

// ------------------------------------------------------------------------

/**
 * CodeIgniter Language Helpers
 *
 * @package		CodeIgniter
 * @subpackage	Helpers
 * @category	Helpers
 * @author		ExpressionEngine Dev Team
 * @link		http://codeigniter.com/user_guide/helpers/language_helper.html
 */

// ------------------------------------------------------------------------

/**
 * Lang Output
 *
 * Fetches a language variable and outputs that text with an HTML element
 *
 * @param	string	The language line
 * @param	string	The HTML element
 * @param	string	The class to use
 * @param	bool	Use nl2br()
 * @param	bool	Use br2p()
 * @return	string
 */	
if ( ! function_exists('lang_output'))
{
	function lang_output($line, $element = 'p', $class = null, $nl2br = true, $br2p = true)
	{
		// Get an instance of the CI object
		$CI =& get_instance();

		// Get the language line
		$line = $CI->lang->line($line);

		return text_output($line, $element, $class, $nl2br, $br2p);
	}
}

// ------------------------------------------------------------------------

/**
 * Text Output
 *
 * Outputs text with an HTML element
 *
 * @param	string	The text
 * @param	string	The HTML element
 * @param	string	The class to use
 * @param	bool	Use nl2br()
 * @param	bool	Use br2p()
 * @return	string
 */	
if ( ! function_exists('text_output'))
{
	function text_output($text = '', $element = 'p', $class = null, $nl2br = true, $br2p = true)
	{
		// Set the class variable
		$classVar = (isset($class)) ? ' class="' . $class . '"' : null;

		// Set the content
		$content = ($nl2br) ? nl2br($text) : $text;

		// Set the elements
		$startElement = (empty($element)) ? null : '<'.$element.$classVar.'>';
		$endElement = (empty($element)) ? null : '</'.$element.'>';

		/**
		 * Normalize <br><br> as multiple paragraphs - in the case of p tag,
		 * use the p elements generated by this function, while in the case of
		 * no specified tag, then we pass NULL and let br2p wrap it in standard
		 * p tags
		 */
		if ($br2p and ($element == 'p' or $element == '' or ! $element))
			return br2p($content, $startElement, $endElement);

		// Set up the entire element
		$retval = $startElement.$content.$endElement;

		return $retval;
	}
}

/**
 * BR2P
 *
 * Converts BR tags to P tags
 *
 * @author	Jon Matterson
 * @param	string	The language line
 * @param	string	The opening HTML tag
 * @param	string	The close HTML tag
 * @return	string
 */
if ( ! function_exists('br2p'))
{
	function br2p($text, $startElement = null, $endElement = null)
	{
		if ( ! $startElement) $startElement = '<p>';
		if ( ! $endElement) $endElement = '</p>';

		// Explode elements on <br />
		$text = explode('<br />', preg_replace('/<br[^>]*?>/', '<br />', $text));

		// When last empty: add line break with a br
		$lastEmpty = true;

		// when outside p: add br if line is empty or start p
		$outOfElement = false;

		$str = $startElement;
		
		foreach ($text as $sub)
		{
			$len_0 = (strlen(trim($sub)) == 0);

			if ($len_0)
			{
				if ( ! $outOfElement)
					$str.= $endElement;
				else
					$str.= '<br>';
			}
			else
			{
				if ($outOfElement)
				{
					$str.= $startElement;
					$outOfElement = false;
				}
				elseif ( ! $lastEmpty)
				{
					$str.= '<br>';
				}

				$str.= $sub;
			}

			if($len_0)
				$outOfElement = true;

			$lastEmpty = $len_0;
		}
		$str.= $endElement;

		return $str;
	}
}

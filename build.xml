<?xml version="1.0" encoding="UTF-8"?>
<project name="nova3" description="Build file for Nova 3" default="help">
	
	<!-- ============================================  -->
	<!-- Properties                                    -->
	<!-- ============================================  -->
	<property name="basedir" value="."/>
	
	<property name="dir.build" value="../build/nova3" />
	<property name="dir.src" value="${dir.build}/src" />
	<property name="dir.assets" value="${dir.build}/assets" />
	<property name="dir.releases" value="${dir.build}/releases" />
	
	<!--<property name="pull.repo" value="git://github.com/anodyne/nova.git" />-->
	<property name="pull.repo" value="http://github.com/anodyne/nova.git" />
	<property name="pull.branch" value="3.0/master" />
	
	<property name="build.version" value="3_0_0" />
	<property name="build.genres" value="bsg" />
	
	<!--<property file="${dir.build}/build-ftp.properties" />-->
	
	<property name="deploy.dir" value="/www/nova/downloads" />
	
	<property name="broadcast.dir" value="/www/www/feeds/nova3/" />
	
	<!-- ============================================  -->
	<!-- Target: help                                  -->
	<!-- ============================================  -->
	<target name="help" description="Show the available options">
		<echo message="phing help            View the available options" />
		<echo message="phing pull            Pull the latest source code from Github" />
		<echo message="phing build           Build the zip archive files"/>
		<echo message="phing deploy          Push the zip archive files to the server" />
		<echo message="phing broadcast       Push the notification file to the server and update the documentation" />
		<echo message="phing all             Run pull, build and deploy (broadcast must be run manually)" />
	</target>
	
	<!-- ============================================  -->
	<!-- Target: pull                                  -->
	<!-- ============================================  -->
	<target name="pull" description="Clean the source directory and clone the repository from Github">
		<phingcall target="_clean-source" />
		<phingcall target="_pull-from-github" />
		<!--<phingcall target="_file-cleanup" />-->
	</target>
	
	<target name="_clean-source">
		<delete>
			<fileset dir="${dir.src}">
				<include name="*" />
			</fileset>
		</delete>
	</target>
	
	<target name="_pull-from-github">
		<exec command="git clone ${pull.repo} src" dir="${dir.build}" />
		<exec command="git checkout ${pull.branch}" dir="${dir.src}" />
	</target>
	
	<target name="_file-cleanup">
		<delete>
			<fileset dir="${dir.src}">
				<include name="build.xml" />
				<include name="application/common/*/**" />
				<include name="**/.git/**" />
				<include name="**/.git*" />
			</fileset>
		</delete>
	</target>
	
	<!-- ============================================  -->
	<!-- Target: build                                 -->
	<!-- ============================================  -->
	<target name="build" description="Use the cloned repository to build the release zip archives">
		<foreach list="${build.genres}" param="genre" target="_build-genres"/>
	</target>
	
	<target name="_build-genres">
		<copy todir="${dir.src}/application/assets/common/${genre}">
			<fileset dir="${dir.assets}/genres/${genre}">
				<include name="**" />
			</fileset>
		</copy>
		<copy file="${dir.assets}/config/${genre}.php" tofile="${dir.src}/application/config/nova.php" overwrite="true" />
		
		<zip destfile="${dir.releases}/nova_${build.version}_${genre}.zip" basedir="${dir.src}" />
		
		<phingcall target="_clean-genre" />
	</target>
	
	<target name="_clean-genre">
		<delete dir="${dir.src}/application/assets/common/${genre}" />
		<delete file="${dir.src}/application/config/nova.php" />
	</target>
	
	<!-- ============================================  -->
	<!-- Target: deploy                                -->
	<!-- ============================================  -->
	<!--<target name="deploy" description="Deploy the release zip archives to the Anodyne Productions server">
		<ftpdeploy host="${ftp.host}" port="${ftp.port}" username="${ftp.username}" password="${ftp.password}" mode="${ftp.mode}" dir="${deploy.dir}">
			<fileset dir="${dir.releases}">
				<include name="*.zip" />
			</fileset>
		</ftpdeploy>
	</target>-->
	
	<!-- ============================================  -->
	<!-- Target: broadcast                             -->
	<!-- ============================================  -->
	<!--<target name="broadcast" description="Push the notification file up to the server and update the documentation site">
		<http-request url="http://docs.anodyne-productions.com/cl.php" />
		
		<ftpdeploy host="${ftp.host}" port="${ftp.port}" username="${ftp.username}" password="${ftp.password}" mode="${ftp.mode}" dir="${broadcast.dir}">
			<fileset dir="${dir.src}">
				<include name="nova/modules/nova/update/assets/version.yaml" />
			</fileset>
		</ftpdeploy>
	</target>-->
	
	<!-- ============================================  -->
	<!-- Target: all                                   -->
	<!-- ============================================  -->
	<target name="all" description="Run all the targets except the broadcast target">
		<phingcall target="pull" />
		<phingcall target="build" />
		<!--<phingcall target="deploy" />-->
	</target>
</project>
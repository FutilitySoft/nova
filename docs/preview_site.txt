M1
====

Objective -
In a word, foundation. Nova's first development milestone was all about laying the foundation for everything that will come. For the first time in Anodyne history, we aren't using a home-brewed framework for our popular RPG management software (formerly the SIMM Management System). Instead, we've turned to a small company called EllisLab and their PHP framework CodeIgniter. The advantages to using CodeIgniter are extensive, but the short explanation is that CI will allow the development team to re-build our RPG management tool with less effort than we would have had to have used otherwise. In the process, we're able to offer some very cool new features that we could only have dreamed about before!

Goal #1 for the milestone was to get CI in place and all the various pieces ticking like a Swiss watch. These pieces include internationalization, helpers, models, libraries, controllers, and basic templating; all are essential pieces that come together to help make Nova what it will be. Goal #2 was documentation. One of the biggest failings of SMS was the lack of clear documentation about every little piece of the system. That's changing with Nova. Goal #3 was Nova assets and installation. SMS was always developed by building things through phpMyAdmin and then trying to work backwards at the end to build the installation and update files. It mostly worked, but it had holes. This time around though, we focused on getting this part of the process down cold (including a new uninstall feature). Finally, goal #4 was this preview site. Never before has Anodyne provided such a resource and it should help people keep tabs on how Nova's coming along and what they expect when it's finally released.

Start Date 単 04 June 2008
End Date 単 29 September 2008

Development Report -
Nova M1 went off (mostly) without a hitch. Admittedly, CodeIgniter is pretty easy to set up on a server, so it was more a matter of setting up the project and sitting down to familiarize ourselves with the framework. Once we were more comfortable, we dove in and started to customize it to exactly what we needed. It started with a few models, then some 3rd party libraries, then our own libraries, and finally our own helpers (and even extending a few of CI's default helpers). Nova is internationalized, meaning that it's relatively easy to translate it to other languages. (Once we get to the end of development, we'll make a big push to get Nova translated to as many languages as possible.) Documentation has been started and work will continue on that for a long time yet. We can install Nova with one of 5 genres (DS9, Enterprise, Romulan, Cardassian, or Battlestar Galactica). In addition, we have some basic data in the system to make sure everything's working. Finally, you're looking at the fourth goal! All in all, this was a very successful start to the project.

Files -	587 (SMS) / 380 (Nova)
Lines of Code - 38,549 (SMS) / 21,635 (Nova)
Database Tables - 26 (SMS) / 42 (Nova)

Where To From Here? -
Milestone 2! The high level overview is pretty simple: code the entire un-authenticated system. (That means everything that isn't hidden behind the login and access control system.) There are certainly going to be some challenges in this milestone, but when all is said and done, a huge chunk of the system will be finished. By the end of M2, we'll be displaying character data out of the database, mission posts, personal logs, news items (and all three's comments), the join form, specs page, and the list goes on. Of course, there won't be any way to edit the data outside of going into phpMyAdmin, but being able to display the data is half the battle! We're also going to continue building clear and concise documentation that will help people understand Nova from top to bottom. It's our goal to post the documentation we have at the conclusion of M2 and build on it as the milestones continue. While we're not going to wave the new documentation around, we're certainly going to let people get in there and look it over so they know what to expect when Nova lands.

Oh, and one more thing, it's our goal to post a preview of Nova M2 on this site at the end of the milestone. No guarantees, but we're gonna try to make it happen.

====
M2
====

Objective -
What's the phrase ... a journey of 1000 miles begins with a single step? That's the one. M1 set the foundation, put us on the path, but now we've gotta make the first step down the path, and believe me, it's a long road, but we've gotta start somewhere. Milestone 2's main focus is the un-authenticated system, or in layman's terms, everything you can see when you're not logged in. We're focusing on 4 sections during M2: main, personnel, search, and sim. Hardcore users of SMS will notice that 2 sections are missing, the ship and the database. That's actually being done on purpose. First, we're dropping the Database feature and we'll be spending a lot of time (an entire milestone in fact ... 7 for those who are curious) a mini-wiki that'll replace the Database. With the mini-wiki in place, it'll be the game master's responsibility to put some of that ship/starbase content in the wiki, like ship history, et al. That means that M2 will focus on the main section, the personnel section, and the sim section.

There's not much in the way of new features coming out of this section. We have to re-build everything from scratch, but that's not necessarily a bad thing. The main section is almost completely unchanged: index, news, viewing a news item, contact page, site credits, and the join page (it's been moved to the main section from the personnel section). I think the biggest thing to talk about with the main section is the fact that the join page will be built out of the database, meaning that supplemental fields can be added to the join field and will be emailed to the game master (it's not really realistic to allow people to add stuff to the characters table on the fly). This feature will extend to the docking request form and specs. Obviously the specs stuff will be a lot more extensive.

The personnel section is, like the main section, almost identical to what's in SMS 2: a manifest, chain of command, viewing a bio, viewing a person's posts and logs as well as a page to view someone's awards. There's a fundamental flaw in the implementation of SMS 2's awards display in bios, namely that some players may garner a lot of awards. In SMS 2, we help that issue by hiding the awards by default, but if someone has 50 awards, that'll stretch a ways down the page. In Nova, we're fixing that by allowing admins to set how many awards are shown on the bios. By default, it'll show the last 10 awards a character has received with a link to go to their full list. It should be a pretty big step forward. On top of that, because we've de-coupled the characters and players, and just recently the awards and characters as well, there's a really cool feature to do with OOC awards. In SMS 2, if a player did something that received an OOC award, the award was put in their bio, but if they changed characters, they lost that award. Not any more though. If an OOC award is given, it'll be shown on every character bio that player's account is tied to. No more having to transfer awards. Should be a great step forward!

The sim section has almost no new things. We've already mentioned the stuff about the specs being built on the fly and the game master being able to add fields to it on the fly. It should be a really good system that provides a lot more flexibility, especially as we're offering more than one genre now. One enhancement in regards to awards is that now, on top of just getting a list of the available awards, each award will have its own page with a list of all the people who have won that award in the past. Just another little thing to add to a pretty simple feature.

Finally, we're adding a huge new feature that should've been in SMS 2 from the start: search. It's probably going to be the most challenging part of M2, but in the end, it'll be worth it. Users will be able to search by a lot of different things like tags, title, content, comments, and author. In addition to searching mission posts, users will be able to search through personal logs, news items, and even wiki articles (when the time comes). It should be a really awesome feature that'll make it even easier to find what you're looking for on the site!

Start Date 単 29 September 2008
End Date 単 13 January 2009 

Development Report -
*  System wide search is now available. At this point, it's very basic. You can search mission posts, personal logs, and news items. Within those, you can search their titles, content, and tags. There are currently no plans to add an advanced search feature until we've had the opportunity to see how people are using the search feature and what kind of advanced functionality they might want.
* Originally, there were some controllers which we weren't going to allow to be extended. However, after carefully considering that decision, I've changed my mind and every controller has been set up to be extended. Also, for the sake of clarity, I've moved all the "base" controllers into an aptly named directory called base. Anodyne will only ever update controllers in the base directory, meaning that controllers and controller methods can be extended without worrying about having to make a lot of changes when an update comes out.
* Nova has a kick-ass feature now: automatic backup. Before Nova tries to upgrade you from SMS or run an update, it'll backup your database and put the zip archive on your server. It's an awesome feature, however, in order to fully take advantage of the feature, we're recommending that you be on a server that has at least a memory limit of 32M. More information about system requirements versus recommendations will be released as we get closer to the beta phase.

Stats -
535 Files
49,439 Lines
42 Database Tables

Where To From Here? -
So where do we go from here? Well, it isn't where we originally thought. The original plan was to move on to data management, but after taking some time to think about it, we've shifted our thinking. Our first task will still be authentication, user access control, and a stab at a remember me feature, but after that, we'll turn our attention to writing/saving posts and private messages. The biggest reason for this is how we want to do posts. It's important for us to know exactly how we're handling some of those pieces before we worry about managing them. So really, the only change we've made is swapping M3 and M4.

In addition to working on those pieces, there are a few loose ends to be tied up with M2 in relation to authentication. Mainly, pieces that can't be done until full authentication and sessions are implemented. Once they are, the un-authenticated side of things will officially be complete. In addition, we're still plugging away at documentation as well, though I'm definitely very pleased with what we have so far (you can see it on the Anodyne forums). Finally, we'll be looking to keep working on genres, the installation center, and a first stab at a basic upgrade script for SMS. All in all, there's a lot to do, but we've made good progress so far!

====
M3
====

Objective -
Bring on the big guns! M3 is all about authentication, user access, and writing. Sounds pretty easy, right? Wrong! Authentication isn't too bad; really, it isn't. We're looking to make some changes to it though, like changing the process so that Nova knows whether your email address is wrong or your password. Fixing the reset password stuff so it makes more sense. Secret questions for resetting your password right on the site and not having to get an email and then turn around and change it again. A remember me features, perhaps? There are some challenges in that stuff, but all in all, it really shouldn't be too bad.

So we have authentication, but let's face it, that's kind of boring. What about access control? Well, Nova is bringing with it a whole new role based access control (RBAC) system (how's that for exciting?). I know, we just changed access control in SMS 2.5, but this is a whole new beast and takes some of the good improvements from SMS 2.6 and expands on them further. Now, there will be roles, like department head. Each role will be assigned a series of pages (and access levels if needed) and anyone with the role of department head will have those access levels. What's even better is that if you change the access for the department head role, it changes for everyone immediately (of course, they'd have to log out if they're logged in when it's changed). Of course, there's always the problem child and we try to think about those situations. Let's say you've got a player who just can't be trusted. It's going to be easy to copy the access levels of a role into a new role (let's call the role Problem Children). Then, you can change the role that your player has and the next s/he logs in, they won't have access to everything the department heads do. Problem solved (at least from a management perspective).

Finally, writing. It's arguably one of the most important parts of the system, because why are you playing an RPG? To write of course! There isn't a lot changing, but we are focusing in on some issues with the current way things work. I don't want to give away too many details because we haven't even sat down to try and get this stuff written. Once we have something to tell, we'll let everyone know what's changed.

Start Date 単 13 January 2009
End Date 単 01 March 2009 

Development Report -
*  Users are now able to login to Nova using the email address and password they set up during the installation. We have completely removed usernames from authentication. In addition, we've added a Remember Me feature that will keep a user logged in for 2 weeks. In addition, we have rewritten the Reset Password feature to use a password reset question. In the future, admins will be able to add questions to the list. For security purposes, the answers are hashed meaning that they have to be typed in exactly as they were first entered.

* Private messaging is done! Users can now send private messages to any member of the crew including sending to multiple people at the same time. Once a user has received a private message, they can reply to it, reply to all recipients, or forward it to someone else.

* Mission posts, personal logs and news items can now be written and sent to all players. This includes saving entries and coming back to them. We've also combined the posting pages, so solo mission posts and joint author posts are sent from the same page. And speaking of joint author posts, there is now no longer a limit on how many people can be involved in a post, so go nuts!

* One of the new features that just sort of came out of this milestone and was completely unplanned was the Writing Control Panel. To clear up space on the Admin Control Panel, we've moved the listing of saved entries to the Writing Control Panel in addition to a list of My Recent Entries and All Recent Entries. Check out the WCP and let us know what you think!

* We've begun the Admin Control Panel. It's not fleshed out yet, but it is started. You&rsqo;ll also notice that we have replaced personalized menus with a user panel that has a lot more information available on it. In future milestones we will expand on the user panel.

* Documentation is completely caught up now. Every page in the system has a page in user_guide/pages with an overview of that page. In addition, we have a whole slew of tutorials as well. This is a big thing for us. We want to make sure that Nova is extensively documented. If documentation isn't clear, drop a message into the bugs forum and we'll make sure to clear it up.

Stats -
655 Files
58,497 Lines
51 Database Tables

Where To From Here? -
* Milestone 4 is all about site and data management. No ground breaking features here, but one never knows what might creep up during development.

* Milestone 5 was originally supposed to be about reports, but we've shifted that to M6 and moved character and player management to M5. Reports will take up M6 along with lots of focus on upgrading from SMS and updating through versions of Nova.

* Finally, our last milestone will be the mini-wiki, called Thresher. Lots more information in the coming months!

====
M4
====

Objective -
We're inching closer! In M4, our target is to take on site and data management. It sounds pretty vague, but essentially, it means building the functionality that allows game masters and users to manage the site and all the data (mission posts, personal logs, departments, ranks, positions, awards, etc.). There really aren't any ground breaking features coming in M4, it's mainly just getting the management hooked up. However, completion of M4 pretty much marks the halfway point of Nova's development!

There are bound to be some major challenges here, namely finding the most intuitive way to allow game masters to edit our dynamic forms, but in the end, Nova will have more flexibility than anything SMS could ever dream of offering.

Start Date - 02 March 2009
End Date - 30 June 2009

Development Report -
All through the development of the Nova roadmap, we knew that the site and data management stuff was going to be a dousy. Once we got into it, we found it certainly was a big task, but nothing we couldn't handle. There was a lot of code involved in this step, but it was necessary in order to make Nova as easy to customize and use as possible. All in all, nearly 30,000 lines of code were added to Nova during the course of M4. To put that into perspective, SMS 2.6.7 is just shy of 42,000 lines of code. In four months, we literally wrote 75% of the lines found in the entire SMS system. And we're not done yet!

During M4, the first step was to tackle site management. Unlike SMS, Nova actually makes distinctions between site managing and data managing. Site management includes things like site settings, site messages, the dynamic forms, menu items and system catalogues. These are pages that refer specifically to managing the way Nova operates. One of the biggest changes made in this regard was actually in the database. In SMS, the globals and messages table used columns to set the different messages and a single row with all the data. In Nova, we've made the database scheme more extensible. For most people, they'll just read that and say "Huh?" What it means for Nova is that admins can now create their own settings and messages and use them wherever they want. It's also allowed us to put almost all of the page headers into the database. If you want to change the page heading for something now, you can do it through the Site Messages page in addition to blocks of text and other miscellaneous items.

Another big area where we've made changes from SMS is how we managing ranks and skins. In SMS, it's nothing more than a text field and some dropdown menus. In Nova though, we're giving admins a lot more control over managing them through a new features we're calling catalogues. The rank catalogue is a collection of all the available rank sets that can be used. Each rank set is given a status of active, inactive or development. The latter option allows admins to set a rank set to being in development so they can work on it without worrying about other members of the crew using it before it's ready. In addition, admins can now set a preview image, a blank image, the image extension, credits and a name that's independent of the location. For skins, we allow the same kind of customization and allow admins to set whether their skin has just one section or multiple sections. At the initial release, there won't be a mechanism in place for doing quick installs of skins, but in the future, we'll be providing ways that skin and rank developers can provide an easy and quick way to install ranks and skins on a Nova site.

The second step of M4 was data management: positions, ranks, departments, awards, missions, posts, etc. It certainly isn't the most glamorous portion of development, but when it boils down to it, admins use those features a ton so it's important that they be done and done well. For Nova, we wanted to do our best to make the process of updating and deleting items easier, and we've done that on a few levels. First, we've moved the most used items to the forefront and hidden everything else. For positions, you'll only see the name and number of open slots; everything else is hidden by default and can be shown with the click of a button. The other sections are the same way. The hope is that admins will be able to get in and update their stuff quickly and easily. To further help with that, we've added the ability to update multiple items at the same time (as well as deleting multiples items simultaneously). This means no more updating an item, letting the page refresh, then doing it again for every position/rank/department/mission/award. Now, just udpate everything, hit the button and you're good to go!

It was also important to us to provide some new tools in data management, and we've done that in a big way. The position management page uses an awesome slider tool for setting the number of open slots for a position. No more setting a number. Now, just move the slider to where you want and click Update. You can pick a number between 0 and 50 for each position. It's a little enhancement, but definitely a welcome one that adds some more refinement to Nova.

Another major area of focus was managing posts, logs, news items and comments. In SMS, the tasks were daunting at best, but in Nova, we've tried to make them a little nicer. The first thing you'll notice is that we've put pagination on the tabs so that it's easy to move through your posts. Let's face it, having 3,000 posts is tough to manage without pagination and we want to make it as easy (and quick) as possible. On top of that, we've overhauled the way activation works. Instead of a single place to do activation, we've moved activation to their respective sections. So if you have a pending mission post, you'll activate it from the Manage Mission Posts page (the notification on the admin control panel will send you to the right place). While this may be a major change from the way SMS does it, we think this is going to be easier to manage on the code side of things and make more sense once you get in there and use it. The same behavior goes for logs, news items and comments as well.

The final major area of focus for M4 was documentation. We're dedicated to providing the most thorough documentation possible and keeping up with it during development is a major step forward in ensuring that 90% of questions about Nova can be answered from the documentation. Over the course of M4, we've added page guides for every site management and data management page as well as fleshing out the developer references for libraries and helpers. (Models will come in the future once they've been locked down and cleaned up more toward the end of development.)

Moving forward, we'll continue to make updates to the documentation and provide lots of tutorials (with pictures!) for all kinds of things. If you have suggestions for tutorials or documentation you think Nova could benefit from, drop us an email or mention something on the forums.

Stats -
949 Files
89,834 Lines
54 Database Tables

Where To From Here? -
Milestone 5 will shift our focus from data management to character and user management, the last major pieces of the authenticated system (while reports have yet to be done, Nova could theoretically launch without them). In M5, we'll be addressing issues like linking characters to a user account, creating new character, activating characters, award nominations, status change requests, account management, bio management and many other things. Like the other milestones, there will absolutely be some challenges involved, but it's a good feeling to know there's a light at the end of the tunnel.

After M5, only two milestones remain. M6 will focus on reports, Nova version updates and SMS upgrades. Finally, M7 is our mini-wiki that we're calling Thresher. The hope is that once M5 is done, Anodyne will have a good idea of whether we can meet our internal target release date. As we move closer to a full-blown beta, we'll have more information about the release.

====
M5
====

Objective -
On to the good stuff! M5's focus will be entirely on characters and users, the last major piece of the puzzle. With these pieces completed, the workload left on Nova will reduce significantly.

When addressing character management, there's a lot more than just editing a bio that needs to be taken in to account (though bio management is a big part of it). We already have the chain of command management page done, but admins need to be able to create characters and NPCs and activate characters while non-admins with the proper permissions should be able to create NPCs and even create a playing character that will await approval for linking to their account.

User management is an even more daunting task considering the fact that Nova allows multiple characters to be associated with a user account. Admins need to be able to link and unlink characters from users as well as management tools for handling situations where a user has more character attached to their account than they're allowed to have. Add to that things change status requests, award nominations and account management and you can quickly see why M5 is still a challenging piece of the puzzle.

Start Date - 01 July 2009
End Date - 31 August 2009

Development Report -
The best word to describe M5 would probably have to be straightforward. At this point, we're really rolling and there aren't a lot of issues coming up that really give us pause. If there's a problem, at this point we probably have seen it coming for a few weeks, maybe even months, and are ready to address it. All the stuff we thought would be really tricky a few months ago went off without a hitch. For the first time in the year Nova's been under development, we can finally say that Nova is almost complete.

While we still wouldn't recommend using Nova on a day-to-day basis (mainly because of a lack of support), it's more possible than ever now that you can manage characters and players right through the system now. Create a character, delete them, accept them, reject them and much more! If you need to do something to a character or player, you can do it in Nova now, including linking characters to players.

Stats -
?? Files
?? Lines
56 Database Tables

Where To From Here? -
As we inch closer to the end, Milestone 6 is the first of two milestones that'll cap off the entire system. Phase 1 of M6 is all about reporting and building out the reports from SMS into Nova (as well as a few new reports as well). Once reports are finished, we'll turn our attention to the stuff people are most curious about: upgrading. The short answer is yes, you will be able to upgrade from SMS to Nova, but how much of your data can be moved is another question altogether. Be sure to keep an eye on the blog for more information about upgrading. Finally, the last thing we'll address is updating from one version of Nova to another and making it easy to keep up with Nova releases.

====
M6
====

Objective -
Here we go! This is what you would call the home stretch. We're down to report, upgrading, updating and the mini wiki. Arguably though, M6 could be the toughest of the milestones all because of having to work out the details of upgrading from SMS to Nova. Every time we do development like this, we swear that the upgrade script is going to be developed along with the product, but then it never does. So again, we're in the boat of having to take everyone's data from SMS and put it into Nova (a completely different format), do it without losing anything, and do it as simply and easily as possible. It's a daunting task to be sure, but we're up to it!

Other things we'll need to address in M6 are the reports based on data the system collects and updating from one version of Nova to the next. Each of those poses their own challenges, but by far, the biggest beast to tackle is upgrading.

Start Date - 01 September 2009
End Date - 

Development Report -


Stats -
?? Files
?? Lines
56 Database Tables

Where To From Here? -

====
Thresher (M7)
====

Objective -
I never thought I'd be able to say this, but six down and one to go. Probably one of the most ambitious features we've ever undertaken, Milestone 7, also known as Thresher, is an integrated mini wiki that works seamlessly with Nova to give you and your players a place to colloborate and share information. It'll work similar to what you've come to know and love about wikis with history and categories and collaboration, but we're also tapping in to Nova's access control system and providing easy ways to manage categories and pages. We're excited for the first build of this milestone to roll out to let people use this feature and start to flesh out the last leg of Nova's development.

Start Date - 
End Date - 

Development Report -


Stats -
?? Files
?? Lines
56 Database Tables

Where To From Here? -
Absolutely nowhere.

It's an incredible feeling to be able to say that development of Nova is finished. Over the coming months, we'll continue to push builds of Nova out the door and let people hammer away on it while we make performance tweaks, flesh out the user guide, squash bugs and get ready for the biggest product launch in Anodyne's history. Mark your calendars, because on March 1st, we're going to be making a major announcement on anodyne-productions.com that you won't want to miss!

====
FEATURES - CORE
====

At its heart, Nova is a brand-new beast. SMS 1 and SMS 2 both used frameworks designed by Anodyne, and they were good, for what they did. However, when we sat down to put together a feature list for Nova, there were some ambitious goals on the list that would have required significant rewriting of the core framework. The idea of spending weeks on end just changing the framework wasn't something any of us were looking forward to, until we stumbled across CodeIgniter.

Developed by EllisLab Inc., CodeIgniter is a fully featured PHP framework for rapid application development. It comes with tons of features built-in that we'll be able to use in Nova right away, like internationalization support, HTML email classes, security enhancements (more SQL injection protection and XSS security), database library that supports more than just MySQL, validation, tons of helpers for everything from working with URLs to building forms and tables, and extensibility at its core. CodeIgniter is the perfect solution for our goals for Nova, and as we've begun to use it more and more, we've found what a dream it really is. Of course, moving to a brand-new framework does mean there's far more re-factoring involved (the entire system has to be re-written), but in the end, those re-factored sections allow us to go back and do things right.

One of the best enhancements Nova gets from moving to CodeIgniter is that we'll be using an MVC (Model-View-Controller) paradigm for development. This means we're finally separating the system's business logic and its presentation. To the average user, that means nothing. To a skin developer, it's an incredibly exciting feature because of the possibilities for changing the presentation of the system without getting in to the hard, cold code. There's a lot more on these enhancements in the developer section.

On top of CodeIgniter, we're continuing to work with jQuery for the system because of how lightweight it is, the myriad of plugins available, and its ease of use. Like SMS 2.6, Nova uses jQuery and the jQuery UI library for building widgets and other user interface components.

In the end, the core of Nova may be bigger, but it's more robust and provides near endless possibilities for the future of Nova and other Anodyne products.

====
FEATURES - GENRES
====

One of the biggest complaints against SMS over its history is the fact that it's clearly focused on Star Trek RPGs, even when there are a lot more genres that participate in online RPGs. Why has Anodyne chosen to corner SMS into a single genre? People have tried to modify SMS to be used for other genres, but without a rock solid understanding of the framework, it's left them frustrated with the results and the fact that whenever an update is released, they have to make the choice of whether to update and lose their changes or keep their modifications and slip further away from the new features and bug fixes. With Nova, that decision doesn't need to be made any more.

When we sat down to design the feature list for Nova, one thing was clear: we weren't going to focus on a single genre. Instead, we wanted to make Nova as much a blank slate as possible which could then be complimented with department, position, and rank data from various genres. We think we've accomplished that with Nova. We've compiled pages upon pages of data about other genres with the goal of making it incredibly easy to use Nova for any type of genre your sim is. On top of that, creating a new genre is relatively easy and can be done with a single file. No more modifying half a dozen files (or more sometimes).

We've also been doing our best to offer as many genres with Nova as possible. As it stands now, we'll be offering 13 genres for game masters to choose from.

* Star Trek
** Enterprise
** The Original Series
** Movie era
** DS9
** Romulans
** Cardassians
** Bajorans
** Klingons
* Battlestar Galactica
* Stargate Atlantis
* Babylon 5
* Halo
* Andromeda

Before installing Nova, a game master simply has to change a variable in one of the config files and the system goes from there, installing genre-specific data to the database and using that variable to reference the tables it's created. It would also be possible to install more than one genre and switch between them by simply changing the config variable. To the seasoned SMS user, it'd be easy to not realize things were different since it's a relatively small step to install the genre data and start the sim down the path of a whole new experience that SMS could never offer!

====
FEATURES - DEVELOPERS
====

Extensibility, seamless substitution, new template files, and internationalization are just a few of developer enhancements going in to Nova.  None of these features was easy to accomplish, nor do we want to just pass over these huge milestones for Anodyne, so we're dedicating some space to each of them below.

** The Template File and File Structure **
When we sat down to work on Nova, one of the first features on the list was that we needed to make things easier for the skin developers. When SMS 2 was first released, there were a lot of cries from people to go back to the SMS 1 template style that centered around a Photoshop document and a single PHP file, and while we're not going back to an image-based layout, we have simplified the template files to a just one. It's far easier to visualize what a website is going to look like from one file rather than using a ton of different files (like SMS 2 does now). To combat that, we've enlisted the help of an awesome CodeIgniter library named Template.

The beautiful thing about Template is how easy to use it is. Once you've created your template file, you literally put the PHP variables in where the content and menus should appear. BAM, it's done. Now, that may be over-simplification at its best, but it's far easier than how SMS 2 does it. For instance, right now, SMS 2 requires the menus and header to be in separate files (in some instances, it's easier to move the header into the menu file). Then the content gets pulled in, then the footer. Oy! Now, one file with a few variables sprinkled throughout: content, menu_main, menu_sub, flash_message, and likely a few others by the time Nova is released. That's really it; specify where you want the content and away the system goes. (There will extensive documentation on creating template files before the release of Nova.)

On top of that, we've spent a lot of time working out the skin file structure in the last few months. There are 4 directories in each theme.  (A theme is a subset of a skin since the main site, admin control panel, login screen, and wiki can all be themed differently within the same skin.) The directories we've put in place are: css, js, img, and pages. All of these are pretty self-explanatory (we'll get to the pages folder next). The beauty of the MVC approach to Nova is that we can put all presentation completely separate from the system itself, including Javascript. These changes are going to make skinning Nova far easier, and far more flexible, than anything we've been able to provide for SMS.

** Seamless Substitution **
It happens all the time with SMS 2, someone says they want to change an image file or the presentation of one of the pages on the forums and we warn them that modifying a core file is a bad idea.  Frankly, some of us probably sound like broken records at this point, but the fact is, SMS 2 isn't designed to be heavily MODed, despite the fact that we'd love to see more MODs coming out of the community. On top of that, as you've read above, there's a plethora of changes to skin and template files for Nova that will only help skin developers do awesome things in the future. But back to the original point, what happens now if you want your skin to use a different image for an icon that what the system uses by default? Enter seamless substitution!

Seamless substitution is a major feature of Nova that will have skin developers drooling to get their hands on the API, and it's a relatively simple concept. The central idea to the feature is that there's a global directory with all of the system's icons, pages, and Javascript files. This is where the js, pages, and img directories in each theme come in to play. If you want to replace that icon, just drop the new icon in your theme's img folder (with the same name). That's it. Wait, that's it? Absolutely. The system is smart enough to know that you have the icon in your img directory and it uses that instead of the system global icon. You can do the same thing with Javascript and even the actual view files being used to display the system. Say you want your manifest to do something different. Not a problem! Just copy the view file from the global repository and put it in your theme's pages directory and Nova takes over, displaying your version instead of the global one. This means that someone can create a skin that uses new images, new pages, and even new Javascript without ever touching the core Nova system. The possibilities are endless now!

** Extensibility **
Going off the points above, there are people who are already saying "okay, well that's cool and all, but what if I want to create a new page or change the actual code." Again, Nova uses an MVC approach, so all database interaction is handled by the models and everything else is handled by the controllers. That means that pages are driven by the controllers and each section has its own controller. A url of http://somesite.com/index.php/main/contact will look in the main controller for the contact method and execute the code. Pretty easy to wrap your head around. That means that if you want to create a new page, all you need to do is create a new method in the right controller. To avoid people editing core Nova files though, we've come up with a solution that will allow for users to create new pages and even override existing pages without touching those core application files: extended controllers.

If you want to create or override pages, all you need to do is open up the main.php file and either add a new method or add a method with the same name as the one you want to override (most likely a lot of copying and pasting in that instance). When you load the existing page, the system will automatically use the method you added. Same thing with new pages, it'll automatically be available (assuming you've added the view files, etc.). It's also important to note that Anodyne will never update the extended controllers, meaning any changes you make to those files will stay intact through updates (as long as you don't override them). Being able to extend Nova to be more flexible to your sim was a major goal and one that I think you'll agree we've done much better than SMS 2.

** Internationalization **
Every once in a while, I'll get someone coming to me talking about translating SMS into another language. I'm all for that, but since SMS's presentation and application are tied together in the same files, it's very hard to translate SMS 2 because every time we update, we'd wipe out those translations. Nova takes care of that by including language files that the entire system (minus content coming from the database) is driven from. All text comes from the language files, meaning that if you want to translate your copy of Nova in to Italian, all you need to do are copy a few files and translate the text and you're on your way. Once you've activated your new language, the system will be seen in that language, meaning Nova isn't just an English product any more!

====
FEATURES - MISSIONS, POSTING, AND MORE
====

It's the heart of Nova: missions and posting. To date, SMS has done a good job of putting posting right at the fingertips of anyone logged in to the system. Sure, some people don't want to use it, but for those that do, it's very convenient to have everything in one place. When we sat down to work on Nova, we knew that we didn't want to mess around with the system too much, but there were a few area where we could make some welcomed improvements.

The first of those is a big one: the ability to run multiple missions simultaneously. Let's face it, not everyone just runs one mission at a time, so why should Nova make you do that? The answer: it shouldn't. The concept is an easy one too: just set however many missions you want to be the current one, and if it's greater than 1, a drop down menu is displayed with the current missions and you can select which your post goes to. (For those who are going to ask already, no, we're not going to allow posts in multiple missions; it'd just get too confusing on a few different levels.)

So if we're changing missions, what are we doing to posting? Comments and tags. Let's face it, we've all read a post and been confused by something, or wanted to tell the player that we think it was a great post. To date, you've gotta dig their email address out or send them a PM. That's all well and good, but let's face it, being able to quickly add a comment would just be so much easier, which is exactly why we're adding comments to posts, personal logs, and news items. On top of that, tags have become fairly ubiquitous around the Internet these days, and Nova's getting them too. Say you just wrote a battle post for your sim. You can add a tag that says "battle post" and then when you want to find all the battle posts later, you can just search for that tag. It's really that easy.

====
FEATURES - PLAYERS AND CHARACTERS
====

So we're changing missions and posts, why not throw in players and characters for good measure? Well, we have and we think you're gonna like it ... a lot.

For the first time we're separating characters and players from each other. Why? There are a few reasons actually.

Think about it, how many times have you had a player decide they want to use a different character? With SMS 2, you've gotta create a whole new character and set up a brand new account. With Nova, now you just need to create a new character and tie that character to the player. The player has kept their password and all their personal details but they've been given a new character.

Some sims run multiple missions simultaneously and some sims allow players to sim as multiple characters simultaneously. Separating players and characters allows us to make the latter a reality in Nova now. Game masters can set the number of playing characters a player can have and then they can just assign the characters to a player. Like running multiple missions, if you have more than one character, you'll be given a drop down menu to choose which character you want to post as. When the email is sent out, it'll say it's coming from the character you chose.

Along the same lines as #2, sometimes you create an NPC that just for you to use, maybe the spouse of your character. Now, you just have to post as yourself as them and make a note at the bottom of the post. Not any more. Nova offers support for protected NPCs that can be tied to a player's account. That maens that when you go to post, you'll be able to choose which playing character or NPC you're going to post as. What's even better, since players and characters aren't tied together any more, reporting is even easier despite the fact that more characters might be "posting" now.

All these things are designed to let Nova get out of your way and make it easier for game masters and players to get back to what they want to do: play the game in the ways they want to.

====
MAIN SITE
====
* Nova. RPG management evolved. *
Welcome to the Nova preview site, Anodyne's window into the future of RPG management. Most people have heard of SMS 2, Anodyne's popular Star Trek RPG management system, but we want to take concept one step further. Nova is Anodyne's new, and very powerful, online RPG management system with built-in mission positing, reporting, management, and personnel tools. Instead of just focusing on Star Trek this time though, we're going to be offering up over a dozen different genres out of the box.

Over the course of developing Nova 1.0, we're going to be giving you a sneak peak and the best, and most up-to-date information possible right here. If you've got a question about Nova, it can problably be answered here, and if it can't, there are links to the blog as well as the Nova forum to get your question(s) answered. Already, we have a breakdown of the major features and a description of the completed milestone and current milestone. As development continues, we'll be updating these pages to make sure that you have the most detailed and updated information possible.

====
HISTORY
====

The road to Nova has been years in the making, and like any good software, not without its share of ups and downs. Community is the single greatest tool we have at Anodyne. We don't have the luxury of UI designers, usability experts, steely-eyed QA personnel, or genius programmers. Instead, we rely on the community we've built over the last few years. SMS got to where it was through the community and we've continued that through Nova.

The storied tale of SMS began in late 2004 when Jon Matterson, a wide-eyed 16 year old with visions of a better way to manage online role playing games, started to build a PHP/MySQL-driven system for Star Trek online RPGs to manage their players and post their missions. In 2005, SMS shared the stage with another Star Trek RPG management tool, but without continued updates from the developers, SMS quickly took center stage. Even for a first offering, the product was packed with features that game masters quickly found themselves using day in and day out. Mission posts, personal logs, and news items were at the heart of the system along with simple player management tools that made it easy for players to update their own bios and accounts.

Jon's first two attempts (1.0 and 1.1) never saw the light of day, but in April of 2005, his vision became a reality when he and Cordell Garret launched the SIMM Management System and sparked a new way of doing things in the Star Trek RPG community. SMS 1.2 was off and running in no time at all, and before anyone realized what was happening, countless sims around the Internet were using the revolutionary system and a burgeoning community began to grow around the product. Still, like any first release of a major product, it wasn't without its bumps. The Anodyne community rallied around the product to provide a new array of skins and modifications to the system to compliment the hundreds of hours Jon had already spent building the product. In little to no time, MODs existed that added an awards system, a tour system, and editing of posts, logs, and news items.

Seeing the incredible community reaction to SMS, Jon immediately set his sights on the next version of SMS. Early on, Jon wanted to move right on to version 2.0 in the hopes of fixing some of the things he didn't like about the system, but the scope of the project became too much, and Anodyne shifted its goals to provide an incremental update to SMS by Christmas of 2005. At first, Jon called the pending updating SMS 1.2 Gold, but after reconsidering, decided that incrementing the version to 1.3 would be a better course of action. SMS 1.3 would incorporate all the existing MODs as well as make lots of improvements to the system. Unfortunately, real life interfered and SMS 1.3 never saw the light of day.

One of the community's most vocal members, David VanScott, approached Anodyne in February of 2006 with a proposal to combine all the MODs and some new skins into a release to be dubbed SMS 1.5. David offered to take care of everything and Anodyne agreed, eager to update the system as Jon Matterson worked on SMS 2.0. The incremental release was a huge success and only further expanded the install base of SMS. With bugs addressed and the growing list of MODs incorporated into SMS, Jon Matterson continued to press on with SMS 2.0.

Unfortunately, as tends to happen in community-driven work, real life intervened again and SMS 2 stalled. Jon, recognizing the potential of the community around Anodyne, tapped one of its members to take on the stead of SMS 2 development in March of 2006. David, who had worked with Anodyne on SMS 1.5, was asked to take over the SMS 2 development when Jon saw the infant stages of an independent RPG management system David was working on. Impressed with what he had so far, Jon asked David to take over SMS 2, a task which David did with great enthusiasm. Four months later, SMS 2.0 launched with an incredible amount of anticipation behind it.

The system looked very different, both to the untrained eye as well as to developers. The new features list was fairly small, but they were significant features: joint author posting, reporting, user preferences, and department head controls that could only be dreamed of. The response to SMS 2 was overwhelming and before long, every SMS 1 site had upgraded to SMS 2. Over the span of the next year, Anodyne would release five major updates to the system and a slew of smaller bug fixes, adding features like the SMS Database, Ship Tour, saving of posts, private messaging, database-driven menus, and much more. A year later, Anodyne took another step forward with the final SMS release, version 2.6. Adding personalized menus and a streamlined interface, SMS has become a staple in Star Trek RPG communities.

But Anodyne doesn't want to stop there. For the last 3 and a half years, SMS has focused on the Star Trek RPG community, but that isn't the only community that could use a product like SMS. SMS 3, renamed Nova, had one major goal: go after the other genres that could use a system like Nova. On top of Star Trek, Anodyne wanted to offer Nova to genres like Battlestar Galactica, Babylon 5, Stargate Atlantis, and many more.

The feature list might be long and the development task arduous, but taking a page from its history, Anodyne relies on its community to drive Nova. Our goal is to make a product that helps you get back to what is most important: playing the game. SMS has done that for years now and we're going to continue the trend with Nova in the coming weeks, months, and years.